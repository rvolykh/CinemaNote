<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
	</parent>

	<name>CinemaNote</name>
	<groupId>com.pikaso.home</groupId>
	<artifactId>CinemaNote</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		
		<!-- Utils -->
		<util.apache-commons.version>3.4</util.apache-commons.version>
		<util.google-guava.version>19.0</util.google-guava.version>
		
		<!-- Documentation -->
		<doc.jsondoc.version>1.2.16</doc.jsondoc.version>
		
		<!-- Plugins -->
		<plugin.wro4j.version>1.7.6</plugin.wro4j.version>
		
		<!-- UI dependencies -->
		<ui.angularjs.version>1.5.8</ui.angularjs.version>
		<ui.jquery.version>3.1.1</ui.jquery.version>
		<ui.bootstrap.version>3.3.7-1</ui.bootstrap.version>
	</properties>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Apache utils -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${util.apache-commons.version}</version>
		</dependency>

		<!-- Google utils -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${util.google-guava.version}</version>
		</dependency>

		<!-- JsonDoc documentation -->
		<dependency>
			<groupId>org.jsondoc</groupId>
			<artifactId>spring-boot-starter-jsondoc</artifactId>
			<version>${doc.jsondoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsondoc</groupId>
			<artifactId>jsondoc-ui-webjar</artifactId>
			<version>${doc.jsondoc.version}</version>
		</dependency>

		<!-- Liquibase database control (SB version) -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<!-- H2 database (SB version) -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Lombok (auto get/set methods) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/wro</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/wro</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>ro.isdc.wro4j</groupId>
					<artifactId>wro4j-maven-plugin</artifactId>
					<version>${plugin.wro4j.version}</version>
					<executions>
						<execution>
							<phase>generate-resources</phase>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
						<cssDestinationFolder>${project.build.directory}/generated-resources/static/css</cssDestinationFolder>
						<jsDestinationFolder>${project.build.directory}/generated-resources/static/js</jsDestinationFolder>
						<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
						<wroFile>${project.build.directory}/wro/wro.xml</wroFile>
						<contextFolder>${basedir}/src/main/wro</contextFolder>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.webjars</groupId>
							<artifactId>jquery</artifactId>
							<version>${ui.jquery.version}</version>
						</dependency>
						<dependency>
							<groupId>org.webjars</groupId>
							<artifactId>angularjs</artifactId>
							<version>${ui.angularjs.version}</version>
						</dependency>
						<dependency>
							<groupId>org.webjars</groupId>
							<artifactId>bootstrap</artifactId>
							<version>${ui.bootstrap.version}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
